version: '3'

env:
  PRIMARY: usca
  DR_PRIMARY: usil
  PERF_REPLICA: usny
  DR_PERF_REPLICA: ustx  # DR for the Performance Replica

  COMPOSE_PROJECT: vault  # yq .name compose.yaml

tasks:
  up:
    cmds:
      - task: create-pki
      - task: compose-up
      - task: init-primary
      - task: init-perf-secondaries
      - task: init-dr-secondaries

  down:
    deps: [compose-down, delete-secrets, delete-recovery-files]  # reminder deps run in parallel
    silent: true



  # helpers
  show-ports:
    cmds:
      - docker ps --format=json | jq -sr '[ .[] | [.Names,.ID,.Ports] ] | sort | .[] | @tsv'

  show-ports-lb:
    cmds:
      - docker ps --format=json | jq -sr '[ .[] | select(.Names | contains("-lb-")) | [.Names,.ID,.Ports] ] | sort | .[] | @tsv'

  show-network:
    cmds:
      - docker inspect {{.COMPOSE_PROJECT}}-flat | jq -r '[.[].Containers | .[] | [.Name,.IPv4Address]] | sort | .[] | @tsv'



  # simulation rules
  network-disrupt: # real 0m3.528s
    label: "{{.TASK}}: primary <-> perf-replica"
    dir: scripts
    cmds:
      # primary --x perf-replica
      - ./network-segmentation.sh -m deny -i {{.PERF_REPLICA}} -s {{.PRIMARY}} -c {{.COMPOSE_PROJECT}}
      # perf-replica --x primary
      - ./network-segmentation.sh -m deny -i {{.PRIMARY}} -s {{.PERF_REPLICA}} -c {{.COMPOSE_PROJECT}}

  network-repair:
    label: "{{.TASK}}: primary <-> perf-replica"
    dir: scripts
    cmds:
      # primary --> perf-replica
      - ./network-segmentation.sh -m allow -i {{.PERF_REPLICA}} -s {{.PRIMARY}} -c {{.COMPOSE_PROJECT}}
      # perf-replica --> primary
      - ./network-segmentation.sh -m allow -i {{.PRIMARY}} -s {{.PERF_REPLICA}} -c {{.COMPOSE_PROJECT}}




  # setup rules
  create-pki:
    dir: scripts
    cmds:
      - ./init-pki.sh

  compose-up:
    cmds:
      - docker compose up -d

  init-primary:
    dir: scripts
    cmds:
      - ./init-primary.sh -p {{.PRIMARY}} -c {{.COMPOSE_PROJECT}}

  init-perf-secondaries:
    dir: scripts
    cmds:
      - ./init-perf-replica.sh -r {{.PERF_REPLICA}} -p {{.PRIMARY}} -c {{.COMPOSE_PROJECT}}

  # runs in parallel; as such session output will not be sequential
  init-dr-secondaries:
    deps: [init-primary-dr, init-perf-dr]

  init-primary-dr:
    dir: scripts
    internal: true
    cmds:
      - ./init-dr-secondary.sh -r {{.DR_PRIMARY}} -p {{.PRIMARY}} -c {{.COMPOSE_PROJECT}}

  init-perf-dr:
    dir: scripts
    internal: true
    cmds:
      - ./init-dr-secondary.sh -r {{.DR_PERF_REPLICA}} -p {{.PERF_REPLICA}} -c {{.COMPOSE_PROJECT}}



  # clean-up rules
  compose-down:
    internal: true
    cmds:
      - docker compose down
      - cmd: docker volume prune -f >/dev/null
        ignore_error: true

  delete-secrets:
    internal: true
    cmds:
      - cmd: rm -r tls secrets/init.json
        ignore_error: true

  delete-recovery-files:
    internal: true
    cmds:
      - cmd: rm -r secrets/init-backup.json snapshots
        ignore_error: true

